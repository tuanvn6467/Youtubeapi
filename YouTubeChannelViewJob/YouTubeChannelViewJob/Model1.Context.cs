//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace YouTubeChannelViewJob
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Core.Objects;
    using System.Data.Entity.Infrastructure;

    public partial class youtubeEntities : DbContext
    {
        public youtubeEntities()
            : base("name=youtubeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Channel> Channels { get; set; }
        public DbSet<Video_NumberCount_History> Video_NumberCount_History { get; set; }
        public DbSet<Video> Videos { get; set; }
    
        public virtual ObjectResult<yt_Get_Channel_Result> yt_Get_Channel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<yt_Get_Channel_Result>("yt_Get_Channel");
        }
    
        public virtual int yt_Save_Video(string channelId, string videoEncryptedId, string videoTitle, string videoImageUrl, ObjectParameter returnId)
        {
            var channelIdParameter = channelId != null ?
                new ObjectParameter("ChannelId", channelId) :
                new ObjectParameter("ChannelId", typeof(string));
    
            var videoEncryptedIdParameter = videoEncryptedId != null ?
                new ObjectParameter("VideoEncryptedId", videoEncryptedId) :
                new ObjectParameter("VideoEncryptedId", typeof(string));
    
            var videoTitleParameter = videoTitle != null ?
                new ObjectParameter("VideoTitle", videoTitle) :
                new ObjectParameter("VideoTitle", typeof(string));
    
            var videoImageUrlParameter = videoImageUrl != null ?
                new ObjectParameter("VideoImageUrl", videoImageUrl) :
                new ObjectParameter("VideoImageUrl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("yt_Save_Video", channelIdParameter, videoEncryptedIdParameter, videoTitleParameter, videoImageUrlParameter, returnId);
        }
    
        public virtual int yt_Save_Video_NumberCount(Nullable<int> videoId, Nullable<long> viewCount, Nullable<long> likeCount, Nullable<long> dislikeCount, Nullable<long> favouriteCount, Nullable<long> commentCount, ObjectParameter id)
        {
            var videoIdParameter = videoId.HasValue ?
                new ObjectParameter("VideoId", videoId) :
                new ObjectParameter("VideoId", typeof(int));
    
            var viewCountParameter = viewCount.HasValue ?
                new ObjectParameter("ViewCount", viewCount) :
                new ObjectParameter("ViewCount", typeof(long));
    
            var likeCountParameter = likeCount.HasValue ?
                new ObjectParameter("LikeCount", likeCount) :
                new ObjectParameter("LikeCount", typeof(long));
    
            var dislikeCountParameter = dislikeCount.HasValue ?
                new ObjectParameter("DislikeCount", dislikeCount) :
                new ObjectParameter("DislikeCount", typeof(long));
    
            var favouriteCountParameter = favouriteCount.HasValue ?
                new ObjectParameter("FavouriteCount", favouriteCount) :
                new ObjectParameter("FavouriteCount", typeof(long));
    
            var commentCountParameter = commentCount.HasValue ?
                new ObjectParameter("CommentCount", commentCount) :
                new ObjectParameter("CommentCount", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("yt_Save_Video_NumberCount", videoIdParameter, viewCountParameter, likeCountParameter, dislikeCountParameter, favouriteCountParameter, commentCountParameter, id);
        }
    }
}
